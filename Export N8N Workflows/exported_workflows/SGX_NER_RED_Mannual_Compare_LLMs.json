{"createdAt":"2025-08-18T02:05:14.458Z","updatedAt":"2025-08-27T03:31:18.000Z","id":"GTMPiQvpIdtukMVf","name":"SGX_NER_RED_Mannual_Compare_LLMs","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"=You are an expert‑level financial‑domain NER and Relationship Extraction engine.\n\n### Task\nAnalyse the following text chunks **exclusively** from the *“Board of Directors”* section of {{ $json['Company Name'] }}， an SGX‑listed company’s annual report in {{ $json.Year }} and return **exactly one** JSON object with the schema described below.\n\n{{ $json.toJsonString() }}\n\n### Output JSON schema\n{\n  \"reportYear\"        : int,      // publication year (e.g. 1995, 2020, 2024)\n  \"entities\"          : [         // all unique people & companies, there could be multiple companies as some people have director roles at different companies\n    {\n      \"entityId\"       : string,  // e.g. \"PERSON_{canonicalName all capital letter}\" or \"COMPANY_{company name all capital letter}\"\n      \"type\"           : \"Person\" | \"Company\",\n      \"canonicalName\"  : string,  // official full name\n      \"mentions\"       : string[],// all surface forms (if is a person, should add all possible legal permutation of the canonicalName, you should also look up if he has another legal name in a different country, or know as a nickname.)\n      \"NER_Confidence\" : float,   // 0‑1\n      \"source\"         : int   // page, in format {page number, int, less than 999} e.g. 33\n    },\n    ...\n  ],\n  \"relationships\"     : [         // person → company role links (a person can be related to multiple companies and one person can have multiple relationships with one company) or person → person links (family)\n    {\n      \"sourceEntityId\" : string,  // person id\n      \"targetEntityId\" : string,  // company id | person id (if family)\n      \"role\"           : {\n         \"category\"    : \"Director\" | \"C‑Suite\" | \"Family | \"Others\", // coarse bucket\n         \"details\"     : string                             // raw title (e.g. \"Chief Executive Officer\")\n      },\n      \"effectiveDate\"  : string|null, // YYYY‑MM‑DD, YYYY or null\n      \"RED_Confidence\": float,        // 0‑1\n      \"source\"        : int         // page, same format as above\n    },\n    ...\n  ]\n}\n\n### Rules\n1. **Return only the JSON.** No additional commentary.\n2. Use the same entityId for identical real‑world entities (deduplicate by name context).\n3. Normalise role synonyms (e.g. \"CEO\" == \"Chief Executive Officer\").\n4. Populate `source` with the PDF path & page where the mention appears (format: `PXX`).\n5. Confidence scores must be decimals between 0 and 1.\n6. If a date is missing, set `effectiveDate` to null.\n","messages":{"messageValues":[{"message":"=# SGX Board‑of‑Directors NER + Relationship Extraction Prompt\n## Objective  Parse the *“Board of Directors”* section of a Singapore‑listed company’s annual‑report PDF and emit a single structured valid JSON object. No extra keys, no comments, no trailing text.  ---  ## Top‑level JSON schema  ```jsonc {   \"reportYear\": <int>,   \"entities\": [Entity …],   \"relationships\": [Relationship …] }\n\n## Implementation reminders for the NER/RED engine  * Prefer explicit phrases: *“appointed as”, “joined the Board”, “ceased to be”* to set `effectiveDate`. * Assign **confidence** heuristically; e.g. 1.0 for exact regex capture on a single PDF page, lower for inferred matches. * If the report year cannot be found, fall back to the PDF filename year; flag confidence ≤ 0.5. * Output must be *machine‑parsable* JSON. No trailing commas."}]},"batching":{}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.7,"position":[-580,-640],"id":"dfb6ae11-ea49-4dcd-bdd9-2953c32e705b","name":"Basic LLM Chain","alwaysOutputData":true},{"parameters":{"modelName":"models/gemini-1.5-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-680,-180],"id":"af910da2-14b4-42ca-96f4-5a2d74d45360","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"8ZKGCiNnYo17fBEd","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-2560,-390],"id":"041e10dc-319f-4cf6-9862-887763d6b607","name":"When clicking ‘Execute workflow’"},{"parameters":{"operation":"toJson","options":{"fileName":"={{ $json['Company Name'].replaceAll(' ', '_') }}_{{ $json.Year }}_NER_RED.json"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[456,-390],"id":"bb5c03d9-b93c-41e3-aaeb-86680529f7f7","name":"Convert to File"},{"parameters":{"operation":"write","fileName":"=/files/files/NER_RE_PERFORMANCE_COMPARE/{{ $binary.data.fileName }}","options":{"append":false}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[676,-390],"id":"c9744bad-9737-4627-9f85-acba57e4ef2d","name":"Read/Write Files from Disk1"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[236,-390],"id":"7a666df3-d1b6-46a1-a3da-dd28ea41dc32","name":"Merge"},{"parameters":{"jsCode":"// n8n Code节点代码\n// 处理包含```json标记的输入数据\n\nlet jsonString = $input.first().json.text;\n  \n// 移除```json和```标记\njsonString = jsonString\n  .replace(/^```json\\s*\\n?/, '')  // 移除开始的```json\n  .replace(/\\n?```\\s*$/, '')      // 移除结尾的```\n  .trim();                        // 移除前后空白\n\n// 解析JSON\nlet inputData = JSON.parse(jsonString);\n\n// 验证JSON结构\nif (!inputData.reportYear || !inputData.entities || !inputData.relationships) {\n  throw new Error('Invalid JSON structure');\n}\n\n// return [{'inputData': inputData}];\n\n// 处理数据 - 例如提取关键信息\nconst processedData = {\n  reportYear: inputData.reportYear,\n  companyInfo: {\n    name: inputData.entities.find(e => e.type === 'Company')?.canonicalName,\n    entityId: inputData.entities.find(e => e.type === 'Company')?.entityId\n  },\n  executives: inputData.entities\n    .filter(e => e.type === 'Person')\n    .map(person => {\n      const relationship = inputData.relationships.find(r => r.sourceEntityId === person.entityId);\n      return {\n        name: person.canonicalName,\n        role: relationship?.role?.details || 'Unknown',\n        category: relationship?.role?.category || 'Unknown',\n        confidence: person.NER_Confidence\n      };\n    }),\n  totalEntities: inputData.entities.length,\n  totalRelationships: inputData.relationships.length\n};\n\n// 返回处理后的数据\nconst raw = [\n  {\n    json: {\n      original: inputData,\n      processed: processedData,\n      isValid: true,\n      timestamp: new Date().toISOString()\n    }\n  }\n];\n\n// return [{'processedData': processedData}];\n\n// 如果你只是想验证和传递原始JSON，使用这个简化版本：\n/*\nreturn [\n  {\n    json: $input.all()[0].json\n  }\n];\n*/\n\ntry { return raw; }\ncatch(e){ throw new Error(\"Bad JSON: \"+e.message); }"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-200,-640],"id":"da5c0af2-4942-434b-a9f4-46d36f7bf9f5","name":"Code1"},{"parameters":{"jsCode":"return [\n  {\n    \"Company Name\": \"DBS GROUP HOLDINGS LTD\",\n    \"Year\": 2024,\n    \"Data\": \"835744_DBS%20Annual%20Report%202024.pdf\"\n  }\n]"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2340,-390],"id":"9fd3e6d3-991f-4b91-a3b1-f110a1de2759","name":"Main Process Input Sample"},{"parameters":{"fileSelector":"=/files/files/ExtractedContent/{{ $json.Data.split('.').slice(0,-1).join('')+'_extracted.json' }}","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[-2040,-860],"id":"b88d60fd-c8a1-4d45-89db-3528da2ee875","name":"Read/Write Files from Disk","alwaysOutputData":true},{"parameters":{"operation":"fromJson","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[-1780,-860],"id":"1f478335-9af3-45a1-9cec-090ed36224ce","name":"Extract from File"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-1580,-560],"id":"fde42b62-b529-4eb2-be6b-fa90b37d78cb","name":"Merge2"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0cee0186-66fd-4265-8ec1-6f6f8ac17c11","leftValue":"={{ $json.data.content }}","rightValue":0,"operator":{"type":"array","operation":"lengthGt","rightType":"number"}},{"id":"b3b23461-784a-479e-8f7e-803278ae9f59","leftValue":"={{ $json['Company Name'] }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}},{"id":"0ed72717-1089-4252-a539-0f79483d895e","leftValue":"={{ $json['Company Name'] }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}},{"id":"f3fc41ca-bb4a-45e6-992a-c15f688823d0","leftValue":"={{ $json.Year }}","rightValue":2010,"operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-800,-640],"id":"1b4d4575-cd3c-4090-a17e-9b43ffbc2712","name":"If"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"8508e620-9172-478e-b3cb-6675d3d39349","leftValue":"={{ $('Read/Write Files from Disk').item.json.fileSize.split(' ')[0].toNumber() }}","rightValue":120,"operator":{"type":"number","operation":"lt"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1360,-560],"id":"eb49da51-4672-42ef-9880-77e9263af0f4","name":"If1"},{"parameters":{"model":{"__rl":true,"value":"gpt-5-2025-08-07","mode":"list","cachedResultName":"gpt-5-2025-08-07"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-1080,-160],"id":"822fd561-44f7-4c8d-97a1-011f3ed3cdb2","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"NPu3rOXaPQ7qZ3Fi","name":"OpenAi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatXAiGrok","typeVersion":1,"position":[-480,-180],"id":"e7608af0-8a0d-487b-a9c4-5254c2e0c76a","name":"xAI Grok Chat Model"},{"parameters":{"model":"open-mistral-7b","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatMistralCloud","typeVersion":1,"position":[-200,-180],"id":"523eab24-12a2-409e-b5c2-f22a56261268","name":"Mistral Cloud Chat Model","credentials":{"mistralCloudApi":{"id":"wQXDxCYyIRHiyHjI","name":"Mistral Cloud account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"claude-sonnet-4-20250514","cachedResultName":"Claude 4 Sonnet"},"options":{"maxTokensToSample":100000,"thinking":true}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.3,"position":[-480,-480],"id":"6c95da43-7a44-4273-9b56-1df78c46200c","name":"Anthropic Chat Model","credentials":{"anthropicApi":{"id":"Ew1gdPwF6Qv0iooA","name":"Anthropic account"}}}],"connections":{"Google Gemini Chat Model":{"ai_languageModel":[[]]},"Basic LLM Chain":{"main":[[{"node":"Code1","type":"main","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"Main Process Input Sample","type":"main","index":0}]]},"Convert to File":{"main":[[{"node":"Read/Write Files from Disk1","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Convert to File","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Main Process Input Sample":{"main":[[{"node":"Merge2","type":"main","index":1},{"node":"Merge","type":"main","index":0},{"node":"Read/Write Files from Disk","type":"main","index":0}]]},"Read/Write Files from Disk":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Merge2","type":"main","index":0}]]},"Merge2":{"main":[[{"node":"If1","type":"main","index":0}]]},"If":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"If1":{"main":[[{"node":"If","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[]]},"xAI Grok Chat Model":{"ai_languageModel":[[]]},"Mistral Cloud Chat Model":{"ai_languageModel":[[]]},"Anthropic Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1","saveExecutionProgress":true,"callerPolicy":"workflowsFromSameOwner"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"64e3f15e-d16d-46f3-8c99-1341ae659777","triggerCount":0,"tags":[]}